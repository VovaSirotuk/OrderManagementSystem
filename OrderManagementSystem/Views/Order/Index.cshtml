@model IEnumerable<OrderManagementSystem.DTOs.OrderDTOs.OrderDTO>
<head>
    <script src="~/js/site.js" asp-append-version="true"></script>
</head>
<div class="container mt-4">
    <h2>Contact List</h2>
    <tr><button class="btn btn-primary add">AddOrder</button></tr>
    <table id="order-table" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>CustomerId</th>
                <th>OrderDate</th>
                <th>TotalAmount</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            <tr class="addRow">
                <td><input type="text" class="form-control new-customerId" placeholder="Enter CustomerId"></td>
                <td><input type="email" class="form-control new-orderDate" placeholder="Enter OrderDate"></td>
                <td><input type="text" class="form-control new-totalAmount" placeholder="Enter TotalAmount"></td>
                <td>
                    <button class="btn btn-success save-new">Save</button>
                    <button class="btn btn-secondary cancel-new">Cancel</button>
                </td>
            </tr>
            @foreach (var order in Model)
            {
                <tr data-id="@order.Id">
                    <td>@order.CustomerId</td>
                    <td>@order.OrderDate</td>
                    <td>@order.TotalAmount</td>
                    <td>
                        <button class="btn btn-primary edit">Edit</button>
                        <button class="btn btn-danger delete">Delete</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>
<script>
    $(document).ready(function () {
        $('#order-table').DataTable({
            "paging": true,        // Пагінація
            "searching": true,     // Фільтрація
            "ordering": true,      // Сортування
            "info": true,          // Показує кількість записів
            "lengthChange": true   // Дозволяє змінювати кількість рядків на сторінці
        });
        
    });
    $(document).ready(function () {
        $('.addRow').hide();
        // Подія "click" для кнопки "Edit"
        // Змінює вміст клітинок на текстові поля для інлайн-редагування
        $(document).on('click', '.edit', function () {
            var row = $(this).closest('tr'); // Отримуємо поточний рядок
            row.find('td').each(function (index, td) {
                if (index < 3) { // Перші 3 клітинок є полями для редагування
                    var currentText = $(td).text(); // Поточний текст у клітинці
                    $(td).html('<input type="text" class="form-control" value="' + currentText + '" />'); // Заміна тексту на поле для вводу
                }
            });
            $(this).toggleClass('edit btn-primary save btn-success').text('Save'); // Зміна кнопки "Edit" на "Save"
        });

        // Подія "click" для кнопки "Save"
        // Зберігає змінені дані та надсилає їх на сервер через AJAX
        $(document).on('click', '.save', function () {
            var row = $(this).closest('tr'); // Отримуємо поточний рядок
            var id = row.attr('data-id'); // Отримуємо ID з атрибуту рядка

            var customerId = row.find('td:eq(0) input').val();
            var orderDate = row.find('td:eq(1) input').val();
            var totalAmount = row.find('td:eq(2) input').val();

            
            var updatedData = {
                CustomerId: customerId,         // Нове значення поля "Name"
                OrderDate: orderDate,        // Нове значення поля "Email"
                TotalAmount: totalAmount    // Нове значення поля "Phone
            };
            console.log(updatedData);

            // AJAX-запит на сервер для оновлення даних
            $.ajax({
                url: '@Url.Action("UpdateOrder", "Order")/' + id,
                type: 'POST',
                data: {
                    Id: id,
                    CustomerId: updatedData.CustomerId,
                    OrderDate: updatedData.OrderDate,
                    TotalAmount: updatedData.TotalAmount

                }, // Передача даних у форматі JSON
                success: function (response) {
                    if (response.success) {
                        // Якщо оновлення успішне, повертаємо оновлені дані до таблиці
                        row.find('td').each(function (index, td) {
                            if (index < 3) {
                                $(td).html($(td).find('input').val()); // Виводимо збережене значення
                            }
                        });
                        // Зміна кнопки "Save" назад на "Edit"
                        row.find('.save').toggleClass('save btn-success edit btn-primary').text('Edit');
                    } else {
                        // Повідомлення про помилку, якщо щось пішло не так
                        alert('Error updating data: ' + response.errorMessage);
                    }
                }
            });
        });

        // Подія "click" для кнопки "Delete"
        // Видаляє рядок з бази даних через AJAX
        $(document).on('click', '.delete', function () {
            var row = $(this).closest('tr'); // Отримуємо поточний рядок
            var id = row.attr('data-id'); // Отримуємо ID з атрибуту рядка
            if (confirm('Are you sure you want to delete this record?')) {
                // Підтвердження видалення та виклик AJAX-запиту
                $.ajax({
                    url: '@Url.Action("DeleteOrder", "Order")/' + id, // Виклик контролера для видалення
                    type: 'DELETE',
                    success: function (response) {
                        if (response.success) {
                            row.remove(); // Якщо видалення успішне, видаляємо рядок з таблиці
                        } else {
                            alert('Error deleting record: ' + response.errorMessage); // Повідомлення про помилку
                        }
                    }
                });
            }
        });


        $(document).on('click', '.add', function () {
            $('.add').prop('disabled', true);// Заблокувати кнопку
            $('.addRow').show();
        });

        $(document).on('click', '.cancel-new', function () {
            $('.addRow').hide();
            $('.add').prop('disabled', false);
            $('.new-customerId').val('');
            $('.new-orderDate').val('');
            $('.new-totalAmount').val('');
        });

        $(document).on('click', '.save-new', function () {

            var customerId = $('.new-customerId').val().trim();
            var orderDate = $('.new-orderDate').val().trim();
            var totalAmount = $('.new-totalAmount').val().trim();

            if (name === '' || email === '' || phone === '') {
                alert("All fields are required!");
                return;
            }

            $.ajax({
                url: '@Url.Action("InsertOrder", "Order")',
                type: 'POST',
                data: {
                    CustomerId: customerId,
                    OrderDate: orderDate,
                    TotalAmount: totalAmount
                },
                success: function (response) {
                    if (response.success) {
                        console.log(response);
                        $('.add').prop('disabled', false);
                        $('.addRow').hide();
                        $('.new-customerId').val('');
                        $('.new-orderDate').val('');
                        $('.new-totalAmount').val('');
                        alert("successfuly added");
                        
                        var table = $('#order-table').DataTable();

                        table.row.add([
                             response.order.customerId,
                             response.order.orderDate,
                             response.order.totalAmount,
                            '<button class="btn btn-primary edit">Edit</button>' +
                            '<button class="btn btn-danger delete">Delete</button>'
                        ]).draw(false);
                        

                    } else {
                        alert('Error: ' + response.errorMessage);
                    }
                }
            });
        });
    });
</script>